trigger:
  - main

variables:
  imageName: yourapp

stages:

# =======================
# Build and Push Stage
# =======================
- stage: Build
  jobs:
    - job: BuildAndPush
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: SecretsManagerGetSecret@1
        inputs:
          awsCredentials: 'aws-azuedevops'
          regionName: 'us-east-1'
          secretIdOrName: 'mysqlsecret'
          variableName: 'dbpassword'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            # Write your commands here
            
            echo "##vso[task.setvariable variable=secretVar;issecret=true]$dbpassword"
            echo "Using DB password (masked): $secretVar"
#         - task: Maven@3
#           inputs:
#             mavenPomFile: 'pom.xml'
#             goals: 'package'
#             options: '-DskipTests'
#           displayName: 'Build with Maven'

#         - task: Docker@2
#           displayName: 'Build and Push Docker Image'
#           inputs:
#             containerRegistry: 'YourACRServiceConnection'
#             repository: '$(imageName)'
#             command: 'buildAndPush'
#             Dockerfile: '**/Dockerfile'
#             tags: |
#               $(Build.BuildId)

# # =======================
# # Deploy to Dev
# # =======================
# - stage: DeployDev
#   dependsOn: Build
#   jobs:
#     - deployment: DeployToDev
#       environment: 'dev'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - task: Kubernetes@1
#                 displayName: 'kubectl apply to dev'
#                 inputs:
#                   connectionType: 'Azure Resource Manager'
#                   azureSubscription: 'YourAzureConnection'
#                   azureResourceGroup: 'aks-dev-rg'
#                   kubernetesCluster: 'aks-dev'
#                   namespace: 'dev'
#                   command: apply
#                   useConfigurationFile: true
#                   configuration: 'manifests/'

# # =======================
# # Deploy to UAT (manual approval)
# # =======================
# - stage: DeployUAT
#   dependsOn: DeployDev
#   condition: succeeded()
#   approval:
#     - name: UAT Approver
#   jobs:
#     - deployment: DeployToUAT
#       environment: 'uat'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - task: Kubernetes@1
#                 displayName: 'kubectl apply to UAT'
#                 inputs:
#                   connectionType: 'Azure Resource Manager'
#                   azureSubscription: 'YourAzureConnection'
#                   azureResourceGroup: 'aks-uat-rg'
#                   kubernetesCluster: 'aks-uat'
#                   namespace: 'uat'
#                   command: apply
#                   useConfigurationFile: true
#                   configuration: 'manifests/'

# # =======================
# # Deploy to Prod (manual approval)
# # =======================
# - stage: DeployProd
#   dependsOn: DeployUAT
#   condition: succeeded()
#   approval:
#     - name: Prod Approver
#   jobs:
#     - deployment: DeployToProd
#       environment: 'prod'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - task: Kubernetes@1
#                 displayName: 'kubectl apply to Prod'
#                 inputs:
#                   connectionType: 'Azure Resource Manager'
#                   azureSubscription: 'YourAzureConnection'
#                   azureResourceGroup: 'aks-prod-rg'
#                   kubernetesCluster: 'aks-prod'
#                   namespace: 'prod'
#                   command: apply
#                   useConfigurationFile: true
#                   configuration: 'manifests/'
